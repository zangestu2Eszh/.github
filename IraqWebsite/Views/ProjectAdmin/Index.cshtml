@model IraqWebsite.ViewModels.ProjectSection.ProjectAdmin

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/Admin/_LayoutAdmin.cshtml";
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-12 d-flex justify-content-between">
                <h3>Project Section</h3>
            </div>
        </div>
    </div>
</section>
<div class="card">
    <div class="card-header">
        @if(@Model.Sections.Count() == 0) {
            <a type="button" class="btn btn-primary" asp-action="CreateSection">Create New</a>
        }
    </div>
    <!-- /.card-header -->
    <div class="card-body">
        <table id="example1" class="table table-bordered table-striped text-center">
            <thead>
                <tr>
                    <th>Title</th>

                    @if (User.HasClaim("Permission", "Role Policy Edit") || User.HasClaim("Permission", "Role Policy Delete"))
                    {
                        <th>Action</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Sections)
                {
                    <tr class="text-center">
                        <td>@item.Title</td>
                        <td>
                            <div class="d-flex justify-content-center">
                                @*@if (User.HasClaim("Permission", "Role Policy Edit"))*@
                                @*{*@
                                    <a asp-action="EditSection" asp-route-Id="@item.Id" class="btn btn-primary mx-2"><i class="fas fa-edit"></i></a>
                                @*}*@
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-12 d-flex justify-content-between">
                <h3>Projects</h3>
            </div>
        </div>
    </div>
</section>
<div class="card">
    <div class="card-header">
            <a type="button" class="btn btn-primary" asp-action="CreateProject">Create New</a>
    </div>
    <!-- /.card-header -->
    <div class="card-body">
        <table id="example1" class="table table-bordered table-striped text-center">
            <thead>
                <tr>
                    <th>Image</th>
                    <th>Title</th>

                    @if (User.HasClaim("Permission", "Role Policy Edit") || User.HasClaim("Permission", "Role Policy Delete"))
                    {
                        <th>Action</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Projects)
                {
                    <tr class="text-center">
                        <td><img width="75" height="75" src="@item.Image" /></td>
                        <td>@item.Title</td>
                        <td>
                            <div class="d-flex justify-content-center">
                                @*@if (User.HasClaim("Permission", "Role Policy Edit"))*@
                                @*{*@
                                    <a asp-action="EditProject" asp-route-Id="@item.Id" class="btn btn-primary mx-2"><i class="fas fa-edit"></i></a>
                                @*}*@
                                <a onclick="DeleteItem('@item.Id')" class="btn btn-danger"><i class="fas fa-trash"></i></a>

                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-12 d-flex justify-content-between">
                <h3>Project Category</h3>
            </div>
        </div>
    </div>
</section>
<div class="card">
    <div class="card-header">
            <a type="button" class="btn btn-primary" asp-action="CreateCategory">Create New</a>
        
    </div>
    <!-- /.card-header -->
    <div class="card-body">
        <table id="example1" class="table table-bordered table-striped text-center">
            <thead>
                <tr>
                    <th>Title</th>

                    @if (User.HasClaim("Permission", "Role Policy Edit") || User.HasClaim("Permission", "Role Policy Delete"))
                    {
                        <th>Action</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Categories)
                {
                    <tr class="text-center">
                        <td>@item.Title</td>
                        <td>
                            <div class="d-flex justify-content-center">
                                @*@if (User.HasClaim("Permission", "Role Policy Edit"))*@
                                @*{*@
                                    <a asp-action="EditCategory" asp-route-Id="@item.Id" class="btn btn-primary mx-2"><i class="fas fa-edit"></i></a>
                                @*}*@
                                <a onclick="DeleteCategory('@item.Id')" class="btn btn-danger"><i class="fas fa-trash"></i></a>

                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    function DeleteItem(id) {
        let button = event.currentTarget
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                axios.post(`ProjectAdmin/DeleteConfirmed/${id}`).then((response) => {
                    button.parentNode.parentNode.parentNode.remove()
                    Swal.fire('Success', 'The Item Deleted Successfully', 'success')
                })
            }
        })
    }
</script>
<script>
    function DeleteCategory(id) {
        let button = event.currentTarget
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                axios.post(`ProjectAdmin/DeleteCategory/${id}`).then((response) => {
                    button.parentNode.parentNode.parentNode.remove()
                    Swal.fire('Success', 'The Item Deleted Successfully', 'success')
                })
            }
        })
    }
</script>