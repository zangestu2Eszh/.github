@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer localizer
@inject IOptions<RequestLocalizationOptions> locOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = locOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.NativeName })
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<div>
    <form id="selectLanguage" method="POST" asp-controller="Home" asp-action="SetLanguage" asp-route-returnUrl="@returnUrl">

        @if(@requestCulture.RequestCulture.UICulture.Name == "ar-IQ")
        {
            <input type="hidden" name="culture" value="en-US" />
        }
        else
        {
            <input type="hidden" name="culture" value="ar-IQ" />
        }
            
                                <button type="submit" class="btn lang-button text-light btn333  px-4 py-1 align-items-center d-flex position-relative" id="lang-button" style="border-radius: 3px !important; outline:none; background:var(--theme-color); "><span class="mx-2">العربية</span>
                        </button>
    </form>


</div>

